version: "3.7"

services:
  postgres:
    image: postgres:12
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres

  redis:
    image: redis:alpine
    volumes:
      - redis:/data
    restart: always

  app:
    build: .
    ports:
      - "3000:3000"
    volumes:
      - .:/app/:cached
      - ./logs/app/:/app/log/
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.development
      - .env.development.local
    restart: always

  web:
    build: web
    ports:
      - "80:80"
    volumes:
      - ./web/nginx/:/etc/nginx/conf.d/
      - nginx:/cache/
    depends_on:
      - app
    restart: always

  sidekiq:
    build: .
    command: bundle exec sidekiq
    volumes:
      - .:/app/:cached
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.development
      - .env.development.local
    restart: always

  clock:
    build: .
    command: bundle exec clockwork config/clock.rb
    volumes:
      - .:/app/:cached
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.development
      - .env.development.local
    restart: always

  scrub:
    build: .
    command: bin/scrub
    volumes:
      - .:/app/:cached
      - bundle:/usr/local/bundle
    depends_on:
      - postgres
      - redis
    env_file:
      - .env.development
      - .env.development.local
    restart: always

  musicbrainz:
    build: .
    command: bin/forward
    volumes:
      - .:/app/:cached
      - $HOME/.ssh:/app/.ssh:ro
      - $SSH_AUTH_SOCK:/ssh
    ports:
      - "5433:5432"
    env_file:
      - .env.development
      - .env.development.local
    restart: "no"

volumes:
  postgres:
  redis:
  nginx:
  bundle:
