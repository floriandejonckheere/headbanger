name: CI

on:
  push:
    tags-ignore:
      - '*'
    branches:
      - '*'

jobs:
  app:
    name: Continuous Integration (app)
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis:alpine

      postgres:
        image: postgres:12
        env:
          POSTGRES_DB: postgres
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      neo4j:
        image: neo4j:3.5
        env:
          NEO4J_AUTH: neo4j/password

    container:
      image: ruby:2.7-alpine

    steps:
      - uses: actions/checkout@v1

      - name: Install dependencies
        run: |
          apk add postgresql
          apk add build-base curl-dev git postgresql-dev

      - name: Cache Gems
        uses: actions/cache@v1
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-gems-

      - name: Install Gems
        run: |
          gem install bundler
          bundle config path vendor/bundle
          bundle install --jobs 4 --retry 3

      - name: Test
        env:
          APP_CONTACT: ${{ secrets.APP_CONTACT }}
          MA_ENDPOINT: ${{ secrets.MA_ENDPOINT }}
          MA_ENDPOINT_USER: ${{ secrets.MA_ENDPOINT_USER }}
          MA_ENDPOINT_PASSWORD: ${{ secrets.MA_ENDPOINT_PASSWORD }}
        run: |
          bundle exec rails db:create db:schema:load --trace
          bundle exec rails database:seed:production RAILS_ENV=test --trace
          bundle exec rspec --profile 10 --format progress

      - name: Lint
        run: bundle exec rubocop --parallel --display-cop-names

  web:
    name: Continuous Integration (web)
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '12.x'

      - name: Get yarn cache
        id: yarn-cache
        working-directory: web
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache Node packages
        uses: actions/cache@v1
        with:
          path: ${{ steps.yarn-cache.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install Node packages
        working-directory: web
        run: yarn install --frozen-lockfile

      - name: Test
        working-directory: web
        run: yarn test:unit

      - name: Lint
        working-directory: web
        run: yarn lint
