name: Continuous Deployment

on:
  push:
    tags:
      - 'production'
  workflow_dispatch:

jobs:
  app:
    name: Deploy application
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - uses: chrnorm/deployment-action@releases/v1
        name: Create GitHub deployment
        id: deployment
        with:
          token: ${{ github.token }}
          environment: production

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.REGISTRY_TOKEN }}

      - name: Deploy application
        uses: sagebind/docker-swarm-deploy-action@v2
        with:
          remote_host: ssh://${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }}
          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
          args: stack deploy --with-registry-auth --compose-file ops/docker-compose.yml headbanger

#      - name: Run database migrations
#        uses: sagebind/docker-swarm-deploy-action@v2
#        with:
#          remote_host: ssh://${{ secrets.DEPLOY_SSH_USER }}@${{ secrets.DEPLOY_SSH_HOST }}
#          ssh_private_key: ${{ secrets.DEPLOY_SSH_KEY }}
#          args: service create --restart-policy=none --name migrate -d crawl_site alexellis2/href-counter

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: ${{ github.token }}
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Send email (success)
        if: success()
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Deploy for ${{ github.event.repository.name }} succeeded
          body: The deployment with id ${{ steps.deployment.outputs.deployment_id }} of ${{ github.event.repository.name }} completed successfully!
          from: ${{ secrets.SMTP_FROM }}
          to: ${{ secrets.SMTP_TO }}
          content_type: text/hml

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Send email (failure)
        if: failure()
        uses: dawidd6/action-send-mail@v2
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Deploy for ${{ github.event.repository.name }} failed
          body: The deployment with id ${{ steps.deployment.outputs.deployment_id }} of ${{ github.event.repository.name }} failed!
          from: ${{ secrets.SMTP_FROM }}
          to: ${{ secrets.SMTP_TO }}
          content_type: text/hml
