name: Continuous Deployment

on:
  push:
    tags:
      - 'production'
  workflow_dispatch:

jobs:
  app:
    name: Deploy application
    if: "!contains(github.event.head_commit.message, 'ci skip') && !contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-20.04
    environment: production

    steps:
      - uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set environment
        run: |
          echo "VUE_APP_SENTRY_DSN=${{ secrets.VUE_APP_SENTRY_DSN }}" >> $GITHUB_ENV
          echo "VUE_APP_INSTANCE=${{ secrets.VUE_APP_INSTANCE }}" >> $GITHUB_ENV
          echo "VUE_APP_CACHE_DOMAIN=${{ secrets.VUE_APP_CACHE_DOMAIN }}" >> $GITHUB_ENV

          echo "SECRET_KEY_BASE=${{ secrets.SECRET_KEY_BASE }}" >> $GITHUB_ENV
          echo "APP_EMAIL=${{ secrets.APP_EMAIL }}" >> $GITHUB_ENV
          echo "APP_HOST=${{ secrets.APP_HOST }}" >> $GITHUB_ENV

          echo "PG_HOST=${{ secrets.PG_HOST }}" >> $GITHUB_ENV
          echo "PG_USER=${{ secrets.PG_USER }}" >> $GITHUB_ENV
          echo "PG_PASSWORD=${{ secrets.PG_PASSWORD }}" >> $GITHUB_ENV
          echo "PG_DATABASE=${{ secrets.PG_DATABASE }}" >> $GITHUB_ENV

          echo "RAILS_APP_SENTRY_DSN=${{ secrets.RAILS_APP_SENTRY_DSN }}" >> $GITHUB_ENV
          echo "VUE_APP_INSTANCE=${{ secrets.VUE_APP_INSTANCE }}" >> $GITHUB_ENV

          echo "SMTP_HOST=${{ secrets.SMTP_HOST }}" >> $GITHUB_ENV
          echo "SMTP_PORT=${{ secrets.SMTP_PORT }}" >> $GITHUB_ENV
          echo "SMTP_DOMAIN=${{ secrets.SMTP_DOMAIN }}" >> $GITHUB_ENV
          echo "SMTP_USERNAME=${{ secrets.SMTP_USERNAME }}" >> $GITHUB_ENV
          echo "SMTP_PASSWORD=${{ secrets.SMTP_PASSWORD }}" >> $GITHUB_ENV
          echo "SMTP_FROM=${{ secrets.SMTP_FROM }}" >> $GITHUB_ENV

          echo "MA_ENDPOINT=${{ secrets.MA_ENDPOINT }}" >> $GITHUB_ENV
          echo "MA_ENDPOINT_USER=${{ secrets.MA_ENDPOINT_USER }}" >> $GITHUB_ENV
          echo "MA_ENDPOINT_PASSWORD=${{ secrets.MA_ENDPOINT_PASSWORD }}" >> $GITHUB_ENV

          echo "MB_HOST=${{ secrets.MB_HOST }}" >> $GITHUB_ENV
          echo "MB_USER=${{ secrets.MB_USER }}" >> $GITHUB_ENV
          echo "MB_PASSWORD=${{ secrets.MB_PASSWORD }}" >> $GITHUB_ENV
          echo "MB_DATABASE=${{ secrets.MB_DATABASE }}" >> $GITHUB_ENV

          echo "HB_DATA_EXPIRES_IN=${{ secrets.HB_DATA_EXPIRES_IN }}" >> $GITHUB_ENV
          echo "HB_SYNC_LIMIT=${{ secrets.HB_SYNC_LIMIT }}" >> $GITHUB_ENV
          echo "HB_SYNC_INTERVAL=${{ secrets.HB_SYNC_INTERVAL }}" >> $GITHUB_ENV
          echo "HB_RECOMMENDATION_LIMIT=${{ secrets.HB_RECOMMENDATION_LIMIT }}" >> $GITHUB_ENV

      - name: Deploy application
        uses: wshihadeh/docker-deployment-action@v2
        with:
          remote_docker_host: ${{ secrets.SWARM_SSH_HOST }}
          ssh_private_key: ${{ secrets.SWARM_SSH_KEY }}
          ssh_public_key: ${{ secrets.SWARM_SSH_HOST_KEY }}
          deployment_mode: docker-swarm
          stack_file_name: ops/docker-compose.yml
          args: --with-registry-auth headbanger

      - name: Send email (success)
        if: success()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.SMTP_HOST }}
          server_port: ${{ secrets.SMTP_PORT }}
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Deploy for ${{ github.event.repository.name }} succeeded
          body: The deployment of ${{ github.event.repository.name }} completed successfully!
          from: ${{ secrets.SMTP_FROM }}
          to: ${{ secrets.SMTP_TO }}
          content_type: text/hml

      - name: Send email (failure)
        if: failure()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 587
          username: ${{ secrets.SMTP_USERNAME }}
          password: ${{ secrets.SMTP_PASSWORD }}
          subject: Deploy for ${{ github.event.repository.name }} failed
          body: The deployment of ${{ github.event.repository.name }} failed!
          from: ${{ secrets.SMTP_FROM }}
          to: ${{ secrets.SMTP_TO }}
          content_type: text/hml
